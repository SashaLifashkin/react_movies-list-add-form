{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","NewMovie","state","titleCheck","imgUrlCheck","imdbUrlCheck","imdbIdCheck","handleChange","event","target","name","value","setState","newMovieChecker","newMovie","Object","entries","some","item","handleSubmit","preventDefault","props","addNewMovie","this","onSubmit","type","placeholder","classNames","onChange","disabled","React","Component","App","moviesFromServer","addMovie","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c054cb69.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React, { FormEvent } from 'react';\nimport classNames from 'classnames';\nimport './NewMovie.scss';\n\ntype Props = {\n  addNewMovie: (movie: Movie) => void;\n};\n\ntype State = {\n  title: string;\n  description: string;\n  imgUrl: string;\n  imdbUrl: string;\n  imdbId: string;\n  titleCheck: boolean;\n  imgUrlCheck: boolean;\n  imdbUrlCheck: boolean;\n  imdbIdCheck: boolean;\n};\n\nexport class NewMovie extends React.Component<Props, State> {\n  state: State = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n    titleCheck: false,\n    imgUrlCheck: false,\n    imdbUrlCheck: false,\n    imdbIdCheck: false,\n  };\n\n  handleChange = (event: EventsForm) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      [`${name}Check`]: false,\n    } as Pick<State, keyof State>);\n  };\n\n  newMovieChecker = (newMovie: Movie) => {\n    const checkedArr = Object.entries(newMovie);\n\n    return checkedArr.some(item => (item[0] !== 'description') && (item[1] === ''));\n  };\n\n  handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    } = this.state;\n\n    const newMovie = {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    };\n\n    if (this.newMovieChecker(newMovie)) {\n      this.setState({\n        titleCheck: !title,\n        imgUrlCheck: !imgUrl,\n        imdbUrlCheck: !imdbUrl,\n        imdbIdCheck: !imdbId,\n      });\n\n      return;\n    }\n\n    this.props.addNewMovie(newMovie);\n\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      titleCheck: false,\n      imgUrlCheck: false,\n      imdbUrlCheck: false,\n      imdbIdCheck: false,\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleCheck,\n      imgUrlCheck,\n      imdbUrlCheck,\n      imdbIdCheck,\n    } = this.state;\n\n    return (\n      <form\n        className=\"Form\"\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"title\"\n          placeholder=\"Enter the title\"\n          className={classNames('Form__input', { 'Form__input-error': titleCheck })}\n          value={title}\n          onChange={this.handleChange}\n        />\n        <div className=\"Form__message\">\n          {titleCheck && (\n            <p>\n              *this field is required\n            </p>\n          )}\n        </div>\n        <textarea\n          name=\"description\"\n          placeholder=\"Description\"\n          value={description}\n          className=\"Form__textarea\"\n          onChange={this.handleChange}\n        />\n        <input\n          type=\"text\"\n          name=\"imgUrl\"\n          placeholder=\"Enter the link of image\"\n          className={classNames('Form__input', { 'Form__input-error': imgUrlCheck })}\n          value={imgUrl}\n          onChange={this.handleChange}\n        />\n        <div className=\"Form__message\">\n          {imgUrlCheck && (\n            <p>\n              *this field is required\n            </p>\n          )}\n        </div>\n        <input\n          type=\"text\"\n          name=\"imdbUrl\"\n          placeholder=\"Enter the link of IMDB\"\n          className={classNames('Form__input', { 'Form__input-error': imdbUrlCheck })}\n          value={imdbUrl}\n          onChange={this.handleChange}\n        />\n        <div className=\"Form__message\">\n          {imdbUrlCheck && (\n            <p>\n              *this field is required\n            </p>\n          )}\n        </div>\n        <input\n          type=\"text\"\n          name=\"imdbId\"\n          placeholder=\"Enter the IMDB Id\"\n          className={classNames('Form__input', { 'Form__input-error': imdbIdCheck })}\n          value={imdbId}\n          onChange={this.handleChange}\n        />\n        <div className=\"Form__message\">\n          {imdbIdCheck && (\n            <p>\n              *this field is required\n            </p>\n          )}\n        </div>\n        <button\n          type=\"submit\"\n          className=\"Form__button\"\n          disabled={titleCheck || imgUrlCheck || imdbUrlCheck || imdbIdCheck}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState((prevState) => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addNewMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}